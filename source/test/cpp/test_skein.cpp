#include "xbase\x_target.h"
#include "xbase\x_string_std.h"
#include "xhash\x_skein.h"

#include "xunittest\xunittest.h"

using namespace xcore;

UNITTEST_SUITE_BEGIN(xskein)
{
	UNITTEST_FIXTURE(type)
	{
		UNITTEST_FIXTURE_SETUP() {}
		UNITTEST_FIXTURE_TEARDOWN() {}
	}

	UNITTEST_FIXTURE(generator)
	{
		UNITTEST_FIXTURE_SETUP() {}
		UNITTEST_FIXTURE_TEARDOWN() {}

		UNITTEST_TEST(Empty)
		{
			
		}

		UNITTEST_TEST(test1)
		{
			u8 message[] = { 0xFF };
			xskein256 hash = x_skein256Hash(message, 1);

			u8 vhash[] =
			{ 
				0xA4, 0x7B, 0xE7, 0x1A, 0x18, 0x5B, 0xA0, 0xAF, 0x82, 0x0B, 0x3C, 0xE8, 0x45, 0xA3, 0xD3, 0x5A,
				0x80, 0xEC, 0x64, 0xF9, 0x6A, 0x0D, 0x6A, 0x36, 0xE3, 0xF5, 0x36, 0x36, 0x24, 0xD8, 0xA0, 0x91
			};

			for (u32 i=0; i<hash.size(); ++i)
				CHECK_EQUAL(vhash[i], hash.data()[i]);
		}

		UNITTEST_TEST(test2)
		{
			u8 message[] = { 0xFB,0xD1,0x7C,0x26 };
			xskein256 hash = x_skein256Hash(message, 4);

			u8 vhash[] =
			{ 
				0xBA,0x4D,0x44,0x62,0x35,0x18,0xD9,0x94,0xAD,0x01,0x9E,0xBD,0xB5,0x99,0x44,0xA9,
				0xFB,0x46,0x17,0xD8,0x59,0xD9,0x2E,0x33,0x82,0x88,0x9D,0xA4,0x4C,0xB8,0x05,0xA2			
			};

			for (u32 i=0; i<hash.size(); ++i)
				CHECK_EQUAL(vhash[i], hash.data()[i]);
		}
	}
}
UNITTEST_SUITE_END
